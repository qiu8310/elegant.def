{
  "name": "sscan",
  "description": "String scanner.",
  "version": "0.1.3",
  "homepage": "https://github.com/qiu8310/sscan",
  "bugs": {
    "url": "https://github.com/qiu8310/sscan/issues"
  },
  "license": "MIT",
  "main": "src/sscan.js",
  "author": {
    "name": "Zhonglei Qiu",
    "email": "qiuzhongleiabc@126.com"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/qiu8310/sscan.git"
  },
  "keywords": [
    "sscan",
    "string",
    "scanner",
    "tokenizer",
    "analysis"
  ],
  "dependencies": {},
  "devDependencies": {
    "gulp": "^3.8.8",
    "gulp-jscs": "^1.6.0",
    "gulp-jshint": "^1.9.4",
    "gulp-mocha": "^2.0.0",
    "gulp-istanbul": "^0.8.1",
    "coveralls": "^2.11.1",
    "should": "^6.0.1",
    "jshint-stylish": "^1.0.1",
    "gulp-load-plugins": "^0.10.0",
    "webpack": "^1.8.9",
    "gulp-plumber": "^1.0.0"
  },
  "scripts": {
    "coveralls": "gulp test && cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
    "test": "gulp test"
  },
  "readme": "# sscan\n[![NPM version](https://badge.fury.io/js/sscan.svg)](https://npmjs.org/package/sscan)\n[![GitHub version][git-tag-image]][project-url]\n[![Build Status][travis-image]][travis-url]\n[![Dependency Status][daviddm-url]][daviddm-image]\n[![Code Climate][climate-image]][climate-url]\n[![Coverage Status][coveralls-image]][coveralls-url]\n\n\nString scanner.\n\n\n## Install\n\n\n### Node.js\n\n```bash\nnpm install --save sscan\n```\n\n### Browser\n\n```bash\nbower install --save sscan\n```\n\n## Usage\n\n```javascript\n\nvar scan = require('sscan');\nvar scanner;\n\nscanner = scan('a{www}bc'); // 或者用：scanner = new scan.Scanner('...');\n\nscanner.bos();          // => true   // Begin of String\nscanner.next();         // => '{'\nscanner.takeObject();   // => '{www}'\nscanner.takeWord();     // => 'bc'\nscanner.eos();          // => true  // End of String\n\n\n```\n\n## API\n\n> 前言\n>\n> __异常：__\n> \n> * `SyntaxError`: 程序内部出错一般会抛出此类异常，err 实例对象附加了 str 和 pos 两个属性，用来标识出错的字符串及位置\n> * `Error`: 一个常见的错误信息是 \"EOS\"，即如果 err.message === 'EOS' 表示已经解析完字符串了，但你没有捕获到\n>\n>\n>__两个常见的参数：__\n>\n> * `charMatcher`: 单个字符匹配器，可以是一个字符串、正则表达式 或 一个函数：\n>   \n>    - 字符串：只要字符串中含有这个字符，就表示 true。 比如 `scanner.isChar('abc')` => 当前字符是否在 'abc' 之中\n>    - 正则表达式：只要正则表达式能匹配这个字符，就表示 true。 比如 `scanner.isChar(/[\\w0-9]/)` => 当前字符能否匹配 /[\\w0-9]/\n>    - 函数：只要函数在接受字符参数后返回 true，那么也表示 true。比如 `scanner.isChar(function(ch) {})` => 结果由函数返回值决定\n>\n> * `quoteMode`: 查找字符串的模式，有四种模式：`single`, `double`, `all`, `none`；分别表示只计算单引号、只计算双\n>                引号，单引号双引号都计算，不计算任何引号.\n>\n>    出现这个字段的地方，它的默认值都是 `all`。\n>           \n>\n>\n\n### str\n\n输入的字符串常量。\n\n### pos\n\n当前字符所在的位置。\n\n### char()\n\n返回当前字符。\n\n### isChar(charMatcher)\n\n当前字符是否能匹配 `charMatcher`  （ `charMatcher` 的含意已经在前言中解释了，下面出现了它的话意思也一样）。\n\n### bos()\n\n当前位置是否是字符串的开始， Begin of String。\n\n### eos([charMatcher])\n\n当前位置是否是字符串的结束，End of String。\n\n另外它能接受一个 `charMatcher` 参数，如果设置了它，会判断从现在位置到结束位置中的所胡字符串是否都能匹配 `charMatcher`，\n但不会改变当前的 `pos` 。\n\n__e.g__\n\n```javascript\nvar s = new Scanner('a lll');\ns.next();\n\ns.eos();        // => false\ns.eos(/[\\sl]/); // => true\ns.eos('l');     // => false\n\n```\n\n### reset()\n\n将当前的 `pos` 重置为 0\n\n### white()\n\n返回从当前位置开始的空字符串，如果没有一个，则返回 `\"\"`。\n\n_e.g_\n\n```javascript\nvar s = new Scanner('a  b');\n\ns.white();  // => ''\ns.next();\ns.white();  // => '  '\n\n```\n\n### peek([length])\n\n向下预先查看指定长度的字符，length 默认值为 1 。\n\n### peekRest()\n\n返回剩下的所有字符串，不改变 `pos` 。\n\n__e.g__\n\n```javascript\nvar s = new Scanner('abc');\ns.next();\n\ns.peekRest(); // => 'bc'\ns.pos;        // => 1\n\n```\n\n### till([acceptMatcher,] endMatcher [, eosFn])\n\n从当前位置开始，匹配到 `endMatcher` 所在的位置为止，中间的所有字符需要匹配 `acceptMatcher`。\n\n* 如果匹配到最后还没匹配到 `endMatcher`，则执行 `eosFn` 函数，函数的参数是中间匹配的所有字符组成的字符串。\n* 如果没有匹配到最后就匹配到了 `endMatcher`，则直接将中间匹配到的内容返回。\n* 如果中间有字符和 `acceptMatcher` 不匹配，则抛出异常\n\n__e.g__\n\n```javascript\nvar s = new Scanner('abab xyz');\ns.till('ab ', 'x');         // => 'abab '\ns.till('z');                // => 'xy'\ns.till('u', function(rest){\n  // `rest` should equal 'z'\n})\n```\n\n\n### take(charMatcher)\n\n返回从当前字符开始，所有接下来能匹配 `charMatcher` 的字符，直到字符串结束；它会改变 `pos` 属性。\n\n__e.g__\n\n```javascript\nvar s = new Scanner('abc def');\n\ns.take(/\\w/); // => 'abc'\ns.peekRest(); // => ' def'\n\n```\n\n\n### takeWord()\n\n匹配接下来的一个 word，其实它就是调用了 `Scanner.take(/\\w/)` 而已。\n\n唯一不同的是，如果匹配的结果是个空字符串 `\"\"`，此函数会抛出异常。\n\n### takeQuote( [quoteMode] )\n\n匹配字符串中出现的成对的 `'\"'` 或 `'\\''` 字符串，改变 `pos` 属性到后面那个 quote 的下一个的位置。\n\n如果匹配失败，会抛出 SyntaxError 。\n \n__e.g__\n\n```javascript\nvar s = new Scanner('who \"are\" you');\ns.takeWord();   // => 'who'\ns.white();      // => ' '\ns.takeQuote();  // => '\"are\"'\ns.peekRest();   // => ' you'\n```\n\n### takePair( left, right [, quoteMode] )\n\n类似于 `Scanner.takeQuote`，但它是匹配像 `[]`, `{}`, `<>` 这种成对出现的字符的。\n\n- 默认的 `quoteMode` 为 `'all'`，即如果 `left` 或 `right` 中的字符出现在引号中，会忽略掉它；\n- 如果 `quoteMode` 为 `'single'`，即只有 `left` 或 `right` 中的字符出现在单引号中才会忽略；\n- 其它类推\n\n__e.g__\n\n```javascript\nvar s = new Scanner('{\"a}\"} foo');\n\ns.takePair('{', '}');             // => '{\"a}\"}'\n\ns.reset();\ns.takePair('{', '}', 'single');   // => '{\"a}'  // 只有单引号才算引号，双引号被当作普通字符\n\n```\n\n### takeObject([quoteMode])\n\n`Scanner.takePair('{', '}', quoteMode)` 的简写形式。\n\n### takeArray([quoteMode])\n\n`Scanner.takePair('[', ']', quoteMode)` 的简写形式。\n\n### takeValue()\n\n`takeObject`, `takeArray` 和 `takeQuote` 的综合体。\n\n\n## History\n\n[CHANGELOG](CHANGELOG.md)\n\n\n## License\n\nCopyright (c) 2015 Zhonglei Qiu. Licensed under the MIT license.\n\n\n\n[project-url]: https://github.com/qiu8310/sscan\n[git-tag-image]: http://img.shields.io/github/tag/qiu8310/sscan.svg\n[climate-url]: https://codeclimate.com/github/qiu8310/sscan\n[climate-image]: https://codeclimate.com/github/qiu8310/sscan/badges/gpa.svg\n[travis-url]: https://travis-ci.org/qiu8310/sscan\n[travis-image]: https://travis-ci.org/qiu8310/sscan.svg?branch=master\n[daviddm-url]: https://david-dm.org/qiu8310/sscan.svg?theme=shields.io\n[daviddm-image]: https://david-dm.org/qiu8310/sscan\n[coveralls-url]: https://coveralls.io/r/qiu8310/sscan\n[coveralls-image]: https://coveralls.io/repos/qiu8310/sscan/badge.png\n\n",
  "readmeFilename": "README.md",
  "gitHead": "b5d2d47c524c1f3f403fc4677deb5284b3d941a5",
  "_id": "sscan@0.1.3",
  "_shasum": "634dae0f1089eed7f75d916f04e0ed7f4840d9bd",
  "_from": "sscan@>=0.1.0 <0.2.0"
}
